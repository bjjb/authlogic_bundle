= AuthlogicBundle

This plugin will help you build up an authentication/authorization system easily. You can also customize it by rails built-in engines' way.

This plugin uses work flow of registration as:

1. The new user registers his/her login and email
2. System sends activation instruction mail to the user
3. The user follows up activation url in mail
4. The user chooses authentication type (password / Open ID)
5. System sends registration completion mail to the user
6. The user is been instantly logged in

The user using password authentication can also reset his/her password.

1. The user fills in his/her email in forgot password page
2. System sends password reset insrtuction mail to the user
3. The user follows up password reset url in mail
4. The user chooses new password
5. The user can log in with new password

The Role-Based Access Control (RBAC) is introdued, and you can design the authorization rules (DSL) in first place. Here gives sample rules.

1. The anonymous (guest role) can create a new user (customer role).
2. The logged-in user (customer role) can show and update his/her account.
3. A special user "admin" (admin role) can manage all users.

The internationalization of interface and messages are built-in with english and chinese(zh-TW/zh-CN).

== Requirements

1. rails gem (2.3.0+)
2. bcrypt-ruby gem
3. authlogic gem/plugin
4. ruby-openid gem
5. open_id_authentication plugin
6. declarative_authorization plugin

== Installation

If you start up a new rails application, you can

  $ rails <your-app> -m http://github.com/tsechingho/authlogic_bundle/raw/master/templates/remote.rb

If you have an existed rails application, you can

  $ cd <your-app>
  $ git submodule add git://github.com/tsechingho/authlogic_bundle.git vendor/plugins/authlogic_bundle
  $ rake rails:template LOCATION=vendor/plugins/authlogic_bundle/templates/base.rb SCM=git

== License

Copyright (c) 2009 Tse-Ching Ho, released under the MIT license
